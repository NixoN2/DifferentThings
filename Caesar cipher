#include <iostream>
#include <vector>

std::string salphabet = "abcdefghijklmnopqrstuvwxyz";
std::string balphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
int find(char c)
{
	 c = tolower(c);
	 for (int i = 0; i < salphabet.size(); ++i)
	 {
	      if (salphabet[i] == c)
		  {
			  return i;
		  }
	 }
}
	  char move(char c, bool direction)
	  {
		  if (direction)
		  {

			  if (c == 'z' || c == 'Z')
			  {
				  if (c == 'z')
				  {
					  return 'a';
				  }
				  else
				  {
					  return 'A';
				  }
			  }
			  else
			  {
				  int idx = find(c);
				  if (isupper(c))
				  {
					  return balphabet[idx + 1];
				  }
				  else
				  {
					  return salphabet[idx + 1];
				  }
			  }
		  }
		  else
		  {
			  if (c == 'a' || c == 'A')
			  {
				  if (c == 'a')
				  {
					  return 'z';
				  }
				  else
				  {
					  return 'Z';
				  }
			  }
			  else
			  {
				  int idx = find(c);
				  if (isupper(c))
				  {
					  return balphabet[idx - 1];
				  }
				  else
				  {
					  return salphabet[idx - 1];
				  }
			  }
		  }
	  }

	  std::string movingShift(const std::string& s, int shift)
	  {
		  std::string answ = "";
		  char toMove;
		  for (const auto& c : s)
		  {
			  toMove = c;
			  for (int i = 0; i < shift; ++i)
			  {
				  toMove = move(toMove,1);
			  }
			  answ += toMove;
		  }
		  return answ;
	  }
	  std::string demovingShift(std::string& s, int shift)
	  {
		  std::string answ = "";
		  char toMove;
		  
		  
			  for (const auto& c : s)
			  {
				  toMove = c;
				  for (int i = 0; i < shift; ++i)
				  {
					  toMove = move(toMove, 0);
				  }
				  answ += toMove;
			  }
		  return answ;
	  }

int main()
{
	std::string toCheck = "AcBfF";
	toCheck = movingShift(toCheck, 1);
	std::cout << toCheck << " ";
	toCheck = demovingShift(toCheck, 1);
	std::cout << toCheck;
}
